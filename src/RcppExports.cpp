// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// IRIS_ref_iter
SEXP IRIS_ref_iter(Rcpp::List& XList, SEXP BIn, Rcpp::List& AList, Rcpp::List VList, Rcpp::List StrList, SEXP MuIn);
RcppExport SEXP _IRIS_IRIS_ref_iter(SEXP XListSEXP, SEXP BInSEXP, SEXP AListSEXP, SEXP VListSEXP, SEXP StrListSEXP, SEXP MuInSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type XList(XListSEXP);
    Rcpp::traits::input_parameter< SEXP >::type BIn(BInSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type AList(AListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type VList(VListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type StrList(StrListSEXP);
    Rcpp::traits::input_parameter< SEXP >::type MuIn(MuInSEXP);
    rcpp_result_gen = Rcpp::wrap(IRIS_ref_iter(XList, BIn, AList, VList, StrList, MuIn));
    return rcpp_result_gen;
END_RCPP
}
// IRIS_Marker_iter
SEXP IRIS_Marker_iter(Rcpp::List& XList, SEXP BIn, Rcpp::List& AList, Rcpp::List VList, Rcpp::List StrList, SEXP MuIn);
RcppExport SEXP _IRIS_IRIS_Marker_iter(SEXP XListSEXP, SEXP BInSEXP, SEXP AListSEXP, SEXP VListSEXP, SEXP StrListSEXP, SEXP MuInSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type XList(XListSEXP);
    Rcpp::traits::input_parameter< SEXP >::type BIn(BInSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type AList(AListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type VList(VListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type StrList(StrListSEXP);
    Rcpp::traits::input_parameter< SEXP >::type MuIn(MuInSEXP);
    rcpp_result_gen = Rcpp::wrap(IRIS_Marker_iter(XList, BIn, AList, VList, StrList, MuIn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IRIS_IRIS_ref_iter", (DL_FUNC) &_IRIS_IRIS_ref_iter, 6},
    {"_IRIS_IRIS_Marker_iter", (DL_FUNC) &_IRIS_IRIS_Marker_iter, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_IRIS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
